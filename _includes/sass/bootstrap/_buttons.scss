@mixin btn-active {
	&:focus, &.focus, &:hover, &:active, &.active, .open > &.dropdown-toggle {
		@content;
	}
	.open > &.dropdown-toggle {
		&:hover,
		&:focus,
		&.focus {
			@content;
		}
	}
}

.btn {
	border-width: 0;
	margin: 0;
	cursor: pointer;
	overflow: hidden;
	text-overflow: ellipsis;
	@include font-size-base;
	@include transitions(.25s);
	height: $component-height-base;
	line-height: $component-line-height !important;
	font-weight: $btn-font-weight;
	@include shadow;
	&-red { @include button-variant(white,$red,$red); }
	&-blue { @include button-variant(white,$blue,$blue); }
	&-navy { @include button-variant(white,$navy,$navy); }
	&-green { @include button-variant(white,$green,$green); }
	&-orange { @include button-variant(white,$orange,$orange); }
	&-yellow { @include button-variant(white,$yellow,$yellow); }
	&-white { @include button-variant($btn-default-color,white,white,$silver-light); }
	&-default { @include button-variant($btn-default-color,$btn-default-bg,$btn-default-bg); }
	&-clear, &-text, &-link { background: transparent !important; }
	&-text {
		color: inherit;
		@include active {
			color: inherit;
		}
	}
	&[class*="btn-highlight"], &-default, &-clear, &-text, &-link { box-shadow: none; }
	&-highlight-info { @include button-variant($state-info-text,$state-info-bg,$state-info-border); }
	&-highlight-success { @include button-variant($state-success-text,$state-success-bg,$state-success-border); }
	&-highlight-danger { @include button-variant($state-danger-text,$state-danger-bg,$state-danger-border); }
	&-highlight-warning { @include button-variant($state-warning-text,$state-warning-bg,$state-warning-border); }

	&-lg {
		height: $component-height-large;
		@include font-size-large;
	}
	&-sm {
		height: $component-height-small;
		@include font-size-small;
	}
	&-pill {
		@include pill;
	}
	&-icon {
		padding-left: 0;
		padding-right: 0;
		@include set(width min-width,$component-height-base);
		&.btn-sm { @include set(width min-width,$component-height-small); }
		&.btn-lg { @include set(width min-width,$component-height-large); }
		&-slim {
			min-width: 0;
		}
	}
	&-block, &-slim, &-link, &-text {
		padding-left: 0;
		padding-right: 0;
	}
	&.active, &:active {
		@include box-shadow(none);
	}
	&.disabled, &[disabled] {
		opacity: .375;
	}
}


.btn-file {
	&:before { content: attr(data-placeholder); }
	&[data-value] {
		&:before { content: attr(data-placeholder)" "; }
		&:after { content: "(" attr(data-value) ")"; }
	}
	input {
		position: absolute;
		opacity: 0;
	}
}

.btn-inliner {
	.btn {
		margin-bottom: .3rem;
	}
}
